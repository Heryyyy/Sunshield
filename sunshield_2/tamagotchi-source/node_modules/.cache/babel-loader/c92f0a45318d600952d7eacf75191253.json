{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ashpool/Repositories/tamagotchi-virtual-pet/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport welcomePet from \"../assets/character/welcome-pet.svg\";\nimport outsideKid from \"../assets/character/outside.svg\";\nimport sunburnKid from \"../assets/character/sunburnt.svg\";\nimport indoorsKid from \"../assets/character/inside.svg\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nconst useStyles = makeStyles(theme => ({\n  image: {\n    width: 130,\n    height: 130\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\nexport default function Character(props) {\n  _s();\n\n  const classes = useStyles();\n  const [src, setSrc] = useState(bornPet);\n  useEffect(() => {\n    //Preloading character assets\n    const imageList = [outsideKid, sunburnKid, indoorsKid];\n    imageList.forEach(image => {\n      new Image().src = image;\n    });\n  }, []);\n  useEffect(() => {\n    if (props.age === 0) {\n      setSrc(bornPet);\n    } else if (props.health === 0) {\n      setSrc(deadPet);\n    } else if (props.image) {\n      setSrc(props.image);\n    } else if (props.age > 3) {\n      if (props.happiness >= 70 && props.happiness <= 90) {\n        setSrc(happyPet);\n      } else if (props.happiness <= 30 && props.happiness > 0) {\n        setSrc(sadPet);\n      } else if (props.happiness > 90) {\n        setSrc(lovePet);\n      } else if (props.happiness === 0) {\n        setSrc(cryingPet);\n      } else {\n        setSrc(welcomePet);\n      }\n    }\n  }, [props.age, props.happiness, props.health, props.image]);\n  return /*#__PURE__*/_jsxDEV(Zoom, {\n    in: true,\n    style: {\n      transitionDelay: '500ms'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.img,\n        alt: props.name,\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), props.sunburn !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunburn: \", props.sunburn, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }, this), props.boredom !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Boredom: \", props.boredom, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Character, \"I3oKAKoDZcZ582+2BX9rCo6ez/0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/home/ashpool/Repositories/tamagotchi-virtual-pet/src/components/Character.js"],"names":["React","useState","useEffect","makeStyles","Zoom","useStyles","theme","image","width","height","img","margin","display","maxWidth","maxHeight","Character","props","classes","src","setSrc","bornPet","imageList","outsideKid","sunburnKid","indoorsKid","forEach","Image","age","health","deadPet","happiness","happyPet","sadPet","lovePet","cryingPet","welcomePet","transitionDelay","name","sunburn","undefined","boredom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport welcomePet from '../assets/character/welcome-pet.svg';\nimport outsideKid from '../assets/character/outside.svg';\nimport sunburnKid from '../assets/character/sunburnt.svg';\nimport indoorsKid from '../assets/character/inside.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 130,\n    height: 130,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Character(props) {\n  const classes = useStyles();\n  const [src, setSrc] = useState(bornPet);\n\n  useEffect(() => {\n    //Preloading character assets\n    const imageList = [outsideKid, sunburnKid, indoorsKid]\n    imageList.forEach((image) => {\n        new Image().src = image\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.age === 0) {\n      setSrc(bornPet);\n    } else if (props.health === 0) {\n      setSrc(deadPet);\n    } else if (props.image) {\n      setSrc(props.image);\n    } else if (props.age > 3) {\n      if (props.happiness >= 70 && props.happiness <= 90) {   \n        setSrc(happyPet);\n      } else if (props.happiness <= 30 && props.happiness > 0){\n        setSrc(sadPet);\n      } else if (props.happiness > 90){\n        setSrc(lovePet);\n      } else if (props.happiness === 0) {\n        setSrc(cryingPet);\n      } else {\n        setSrc(welcomePet);\n      }\n    }\n  }, [props.age, props.happiness, props.health, props.image]);\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\n      <div>\n        <img className={classes.img} alt={props.name} src={src} />\n        {props.sunburn !== undefined && <p>Sunburn: {props.sunburn}%</p>}\n        {props.boredom !== undefined && <p>Boredom: {props.boredom}%</p>}\n      </div>\n    </Zoom>\n  );\n}"]},"metadata":{},"sourceType":"module"}