{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ashpool/Repositories/tamagotchi-virtual-pet/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bornPet from \"../assets/character/born-pet.svg\";\nimport deadPet from \"../assets/character/dead-pet.svg\";\nimport happyPet from \"../assets/character/happy-pet.svg\";\nimport lovePet from \"../assets/character/love-pet.svg\";\nimport sadPet from \"../assets/character/sad-pet.svg\";\nimport cryingPet from \"../assets/character/crying-pet.svg\";\nimport welcomePet from \"../assets/character/welcome-pet.svg\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nconst useStyles = makeStyles(theme => ({\n  image: {\n    width: 130,\n    height: 130\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\nexport default function Character(props) {\n  _s();\n\n  const classes = useStyles();\n  const [src, setSrc] = useState(bornPet);\n  useEffect(() => {\n    //Preloading character assets\n    const imageList = [bornPet, deadPet, happyPet, sadPet, welcomePet, lovePet, cryingPet];\n    imageList.forEach(image => {\n      new Image().src = image;\n    });\n  }, []);\n  useEffect(() => {\n    if (props.age === 0) {\n      setSrc(bornPet);\n    } else if (props.age > 3) {\n      if (props.happiness >= 70 && props.happiness <= 90) {\n        setSrc(happyPet);\n      } else if (props.happiness <= 30 && props.happiness > 0) {\n        setSrc(sadPet);\n      } else if (props.happiness > 90) {\n        setSrc(lovePet);\n      } else if (props.happiness === 0) {\n        setSrc(cryingPet);\n      } else {\n        setSrc(welcomePet);\n      }\n    }\n\n    if (props.health === 0) {\n      setSrc(deadPet);\n    }\n  }, [props.age, props.happiness, props.health]);\n  return /*#__PURE__*/_jsxDEV(Zoom, {\n    in: true,\n    style: {\n      transitionDelay: '500ms'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classes.img,\n      alt: props.name,\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Character, \"I3oKAKoDZcZ582+2BX9rCo6ez/0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/home/ashpool/Repositories/tamagotchi-virtual-pet/src/components/Character.js"],"names":["React","useState","useEffect","makeStyles","Zoom","useStyles","theme","image","width","height","img","margin","display","maxWidth","maxHeight","Character","props","classes","src","setSrc","bornPet","imageList","deadPet","happyPet","sadPet","welcomePet","lovePet","cryingPet","forEach","Image","age","happiness","health","transitionDelay","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAQA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAIA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADgC;AAKvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,MADL;AAEHC,IAAAA,OAAO,EAAE,OAFN;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,SAAS,EAAE;AAJR;AALkC,CAAZ,CAAD,CAA5B;AAaA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAACmB,OAAD,CAA9B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMmB,SAAS,GAAG,CAACD,OAAD,EAAUE,OAAV,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,OAAjD,EAA0DC,SAA1D,CAAlB;AACAN,IAAAA,SAAS,CAACO,OAAV,CAAmBrB,KAAD,IAAW;AACzB,UAAIsB,KAAJ,GAAYX,GAAZ,GAAkBX,KAAlB;AACH,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAK,CAACc,GAAN,KAAc,CAAlB,EAAqB;AAClBX,MAAAA,MAAM,CAACC,OAAD,CAAN;AACF,KAFD,MAEO,IAAIJ,KAAK,CAACc,GAAN,GAAY,CAAhB,EAAmB;AACxB,UAAId,KAAK,CAACe,SAAN,IAAmB,EAAnB,IAAyBf,KAAK,CAACe,SAAN,IAAmB,EAAhD,EAAoD;AAClDZ,QAAAA,MAAM,CAACI,QAAD,CAAN;AACD,OAFD,MAEO,IAAIP,KAAK,CAACe,SAAN,IAAmB,EAAnB,IAAyBf,KAAK,CAACe,SAAN,GAAkB,CAA/C,EAAiD;AACtDZ,QAAAA,MAAM,CAACK,MAAD,CAAN;AACD,OAFM,MAEA,IAAIR,KAAK,CAACe,SAAN,GAAkB,EAAtB,EAAyB;AAC9BZ,QAAAA,MAAM,CAACO,OAAD,CAAN;AACD,OAFM,MAEA,IAAIV,KAAK,CAACe,SAAN,KAAoB,CAAxB,EAA2B;AAChCZ,QAAAA,MAAM,CAACQ,SAAD,CAAN;AACD,OAFM,MAEA;AACLR,QAAAA,MAAM,CAACM,UAAD,CAAN;AACD;AACF;;AAED,QAAIT,KAAK,CAACgB,MAAN,KAAiB,CAArB,EAAwB;AACpBb,MAAAA,MAAM,CAACG,OAAD,CAAN;AACF;AAEH,GArBQ,EAqBN,CAACN,KAAK,CAACc,GAAP,EAAYd,KAAK,CAACe,SAAlB,EAA6Bf,KAAK,CAACgB,MAAnC,CArBM,CAAT;AAwBA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,IAAV;AAAgB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACP,GAAxB;AAA6B,MAAA,GAAG,EAAEM,KAAK,CAACkB,IAAxC;AAA8C,MAAA,GAAG,EAAEhB;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzCuBH,S;UACNV,S;;;KADMU,S","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport bornPet from '../assets/character/born-pet.svg';\nimport deadPet from '../assets/character/dead-pet.svg';\nimport happyPet from '../assets/character/happy-pet.svg';\nimport lovePet from '../assets/character/love-pet.svg';\nimport sadPet from '../assets/character/sad-pet.svg';\nimport cryingPet from '../assets/character/crying-pet.svg';\nimport welcomePet from '../assets/character/welcome-pet.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 130,\n    height: 130,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  }));\n\nexport default function Character(props) {\n  const classes = useStyles();\n  const [src, setSrc] = useState(bornPet);\n\n  useEffect(() => {\n    //Preloading character assets\n    const imageList = [bornPet, deadPet, happyPet, sadPet, welcomePet, lovePet, cryingPet]\n    imageList.forEach((image) => {\n        new Image().src = image\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.age === 0) {\n       setSrc(bornPet)\n    } else if (props.age > 3) {\n      if (props.happiness >= 70 && props.happiness <= 90) {   \n        setSrc(happyPet)\n      } else if (props.happiness <= 30 && props.happiness > 0){\n        setSrc(sadPet)\n      } else if (props.happiness > 90){\n        setSrc(lovePet)\n      } else if (props.happiness === 0) {\n        setSrc(cryingPet)\n      } else {\n        setSrc(welcomePet)\n      }\n    }\n\n    if (props.health === 0) {\n        setSrc(deadPet)\n     }\n\n  }, [props.age, props.happiness, props.health]);\n\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\n      <img className={classes.img} alt={props.name} src={src} />\n    </Zoom>\n  );\n}"]},"metadata":{},"sourceType":"module"}