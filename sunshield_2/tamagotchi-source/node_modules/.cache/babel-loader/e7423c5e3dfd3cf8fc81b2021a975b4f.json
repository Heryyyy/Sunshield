{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ashpool/Repositories/tamagotchi-virtual-pet/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport disasterPet from \"../assets/character/disaster-pet.svg\";\nimport exercisePet from \"../assets/character/exercise-pet.svg\";\nimport foodPet from \"../assets/character/food-pet.svg\";\nimport mischiefPet from \"../assets/character/mischief-pet.svg\";\nimport sickPet from \"../assets/character/sick-pet.svg\";\nimport tricksPet from \"../assets/character/tricks-pet.svg\";\nimport welcomePet from \"../assets/character/welcome-pet.svg\";\nimport { useParams } from 'react-router-dom';\nimport { accurateInterval } from '../utils/helpers.js';\nimport Copyright from '../components/Copyright';\nimport Character from '../components/Character';\nimport LinearProgressWithLabel from '../components/LinearProgressWithLabel';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { StaticBanner } from 'material-ui-banner';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '2rem auto',\n    maxWidth: 680\n  },\n  avatarLarge: {\n    width: 72,\n    height: 72\n  }\n})); //Helper functions\n\nfunction status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response);\n  } else if (response.status === 429) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(new Error(response.statusText));\n  }\n}\n\nfunction json(response) {\n  return response.json();\n}\n\nconst stayInRange = stat => {\n  if (stat >= 0 && stat <= 100) return stat;else if (stat > 100) return 100;else return 0;\n};\n\nconst getCharacter = eventType => {\n  let eventGraphic;\n\n  switch (eventType) {\n    case 'Natural Disaster':\n      eventGraphic = disasterPet;\n      break;\n\n    case 'Food':\n      eventGraphic = foodPet;\n      break;\n\n    case 'Mischief':\n      eventGraphic = mischiefPet;\n      break;\n\n    case 'Disease':\n      eventGraphic = sickPet;\n      break;\n\n    case 'Tricks':\n      eventGraphic = tricksPet;\n      break;\n\n    case 'Exercise':\n      eventGraphic = exercisePet;\n      break;\n\n    default:\n      eventGraphic = welcomePet;\n  }\n\n  return eventGraphic;\n};\n\nexport default function App() {\n  _s();\n\n  const [name, setName] = useState('Pippin');\n  const [dayDuration, setDayDuration] = useState(1000); //in miliseconds\n\n  const [age, setAge] = useState(0); // const [health, setHealth] = useState(100);\n  // const [hunger, setHunger] = useState(0);\n  // const [happiness, setHappiness] = useState(100);\n\n  const [sunburn, setSunburn] = useState(0);\n  const [boredom, setBoredom] = useState(0);\n  const [outdoor, setOutdoor] = useState(true);\n  const [sunscreen, setSunscreen] = useState(false);\n  const [hat, setHat] = useState(false);\n  const [uv, setUv] = useState(5);\n  const [gameEnd, setGameEnd] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const timeoutRef = useRef();\n  const eventTimeoutRef = useRef();\n  const classes = useStyles();\n  const {\n    petName,\n    dayDurationInSeconds\n  } = useParams();\n\n  const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n      petDay();\n    }, dayDuration);\n    timeoutRef.current = timeOutInfo; //console.log(timeoutRef.current)\n  };\n\n  const handleNextEvent = nextEvent => {\n    /*timeoutRef.current is null when starting a new game. \n    This condition also keeps the app from fetching when the game has ended\n    */\n    if (timeoutRef.current !== null) {\n      let nextEventInfo = accurateInterval(() => {\n        getNextEvent();\n      }, nextEvent);\n      eventTimeoutRef.current = nextEventInfo; //console.log(eventTimeoutRef.current);\n    }\n  }; //   const getNextEvent = () => {\n  // \t\tfetch('https://www.virtual-pet.uk/v1/event')\n  // \t\t\t.then(status)\n  // \t\t\t.then(json)\n  // \t\t\t.then(function(data) {\n  // \t\t\t    if(data.type === 'Error'){\n  // \t\t\t    \t console.log('Request failed', data);\n  // \t\t\t    \t if (eventTimeoutRef.current) {\n  // \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n  // \t\t\t\t\t\t    eventTimeoutRef.current = null;\n  // \t\t\t\t\t\t }\n  // \t\t\t    \t handleNextEvent(data.nextEvent * dayDuration);\n  // \t\t\t    } else {\n  // \t\t\t    \tconsole.log('Request succeeded with JSON response', data);\n  // \t\t\t\t    setHealth((prev) => stayInRange(prev + data.impact.health));\n  // \t\t\t\t\tsetHunger((prev) => stayInRange(prev + data.impact.hunger));\n  // \t\t\t\t\tsetHappiness((prev) => stayInRange(prev + data.impact.happiness));\n  // \t\t\t\t\thandleOpenBanner(data.type.toUpperCase() + \"! \" + data.title + \": \" + data.description + \" Impact, health: \" + data.impact.health + \" hunger: \" + data.impact.hunger + \" happiness: \" + data.impact.happiness, getCharacter(data.type));\n  // \t\t\t\t\tif (eventTimeoutRef.current) {\n  // \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n  // \t\t\t\t\t\t    eventTimeoutRef.current = null;\n  // \t\t\t\t\t\t }\n  // \t\t\t\t\thandleNextEvent(data.nextEvent * dayDuration); \n  // \t\t\t\t}\t\t\t    \t\n  // \t\t\t }).catch(function(error) {\n  // \t\t\t    console.log('Request failed', error);\n  // \t\t\t });\n  //   }\n\n\n  const petDay = () => {\n    setAge(prev => prev + 1);\n\n    if (age % 5 === 0) {\n      setUv(prev => Math.floor(Math.random() * 14) + 1);\n    }\n\n    if (outdoor) {\n      if (sunscreen) {\n        setSunscreenDuration(prev => {\n          if (prev > 0) {\n            return prev - 1;\n          } else {\n            setSunscreen(false);\n            return 0;\n          }\n        });\n        setSunburn(prev => stayInRange(prev + uv / 2));\n      }\n\n      setSunburn(prev => stayInRange(prev + uv));\n      setBoredom(prev => stayInRange(prev - 5));\n    } else {\n      setSunburn(prev => stayInRange(prev - 10));\n      setBoredom(prev => stayInRange(prev + 5));\n    } // setHealth((prev) => stayInRange(prev - 1));\n    // setHunger((prev) => stayInRange(prev + 1));\n    // setHappiness((prev) => stayInRange(prev - (Math.floor(Math.random() * 5) + 1)));\n\n  }; //   const cleanPet = () => {\n  // \tif (!gameEnd) {\n  // \t\tsetHealth((prev) => stayInRange(prev + 1));\n  // \t}\n  // }\n  // const feedPet = () => {\n  // \tif (!gameEnd) {\n  // \t\tsetHunger((prev) => stayInRange(prev - 1));\n  // \t}\n  // }\n  // const playPet = () => {\n  // \tif (!gameEnd) {\n  // \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n  // \t}\n  // }\n\n\n  const changeOutdoor = () => {\n    if (!gameEnd) {\n      setOutdoor(prev => !prev);\n    }\n  };\n\n  const applySunscreen = () => {\n    if (!gameEnd) {\n      setSunscreen(true);\n      setSunscreenDuration(2);\n    }\n  };\n\n  const resetGame = () => {\n    setAge(0);\n    setSunburn(0);\n    setBoredom(0);\n    setSunscreen(false);\n    setGameEnd(false);\n  }; //helper functions\n\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleOpenBanner = useCallback((text, eventTypeGraphic) => StaticBanner.show({\n    icon: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }, this),\n    iconProps: {\n      src: eventTypeGraphic,\n      className: classes.avatarLarge\n    },\n    open: true,\n    label: text\n  }), [classes.avatarLarge]);\n\n  const cleanup = () => {\n    //Cancel timers\n    if (timeoutRef.current) {\n      timeoutRef.current.cancel();\n    }\n\n    if (eventTimeoutRef.current) {\n      eventTimeoutRef.current.cancel();\n    }\n\n    timeoutRef.current = null;\n    eventTimeoutRef.current = null;\n  }; //Effects\n\n\n  useEffect(() => {\n    if (sunburn == 100 || boredom == 100) {\n      setDialogOpen(true);\n      setGameEnd(true);\n    }\n  }, [health]);\n  useEffect(() => {\n    if (!gameEnd) {\n      // Set pet name if provided\n      if (petName !== undefined) {\n        setName(decodeURIComponent(petName));\n      } // Set day duration\n\n\n      if (dayDurationInSeconds !== undefined && !Number.isNaN(parseInt(dayDurationInSeconds))) {\n        let inputedDuration = parseInt(dayDurationInSeconds);\n\n        if (inputedDuration <= 0) {\n          setDayDuration(1000);\n        } else if (inputedDuration > 60) {\n          setDayDuration(60 * 1000);\n        } else {\n          setDayDuration(inputedDuration * 1000);\n        }\n      } else {\n        setDayDuration(1000);\n      } // Initialize game state\n\n\n      setSunburn(0);\n      setBoredom(0);\n      setOutdoor(true);\n      setSunscreen(false);\n      setUv(5); // Starting UV index\n      // Start the game loop\n\n      beginLife(); // Schedule the first UV change\n\n      const uvChangeInterval = setInterval(() => {\n        setUv(Math.floor(Math.random() * 14) + 1);\n      }, 5 * dayDuration); // Cleanup function\n\n      return () => {\n        cleanup();\n        clearInterval(uvChangeInterval);\n      };\n    } else {\n      cleanup();\n    }\n  }, [gameEnd, petName, dayDurationInSeconds, dayDuration]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StaticBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            sm: 8,\n            md: 6,\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              container: true,\n              direction: \"column\",\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h2\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Age: \", age]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [\"Today's UV Index: \", uv]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [\"You are currently \", outdoor ? \"outdoors\" : \"indoors\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: \"Sunburn:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n                  value: sunburn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: \"Boredom:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n                  value: boredom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  color: \"primary\",\n                  variant: \"contained\",\n                  \"aria-label\": \"outlined primary button group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: gameEnd,\n                    onClick: changeOutdoor,\n                    children: outdoor ? \"Play outside\" : \"Go inside\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 8\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: gameEnd,\n                    onClick: applySunscreen,\n                    children: \"Apply Sunscreen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 8\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: resetGame,\n                  children: gameEnd ? \"Play again!\" : \"Reset Game\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            sm: 4,\n            md: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 3\n    }, this), gameEnd && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleDialogClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Game Over.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Great job! Let's play again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetGame,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Start Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"6iNaICEYe0D5h726HhBTTVlZFGU=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ashpool/Repositories/tamagotchi-virtual-pet/src/containers/App.js"],"names":["React","useState","useEffect","useRef","useCallback","useParams","accurateInterval","Copyright","Character","LinearProgressWithLabel","Button","ButtonGroup","CssBaseline","Paper","Grid","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","StaticBanner","makeStyles","useStyles","theme","root","flexGrow","alignItems","justifyContent","flexDirection","paper","padding","spacing","margin","maxWidth","avatarLarge","width","height","status","response","Promise","resolve","reject","Error","statusText","json","stayInRange","stat","getCharacter","eventType","eventGraphic","disasterPet","foodPet","mischiefPet","sickPet","tricksPet","exercisePet","welcomePet","App","name","setName","dayDuration","setDayDuration","age","setAge","sunburn","setSunburn","boredom","setBoredom","outdoor","setOutdoor","sunscreen","setSunscreen","hat","setHat","uv","setUv","gameEnd","setGameEnd","dialogOpen","setDialogOpen","timeoutRef","eventTimeoutRef","classes","petName","dayDurationInSeconds","beginLife","timeOutInfo","petDay","current","handleNextEvent","nextEvent","nextEventInfo","getNextEvent","prev","Math","floor","random","setSunscreenDuration","changeOutdoor","applySunscreen","resetGame","handleDialogClose","handleOpenBanner","text","eventTypeGraphic","show","icon","iconProps","src","className","open","label","cleanup","cancel","health","undefined","decodeURIComponent","Number","isNaN","parseInt","inputedDuration","uvChangeInterval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport disasterPet from '../assets/character/disaster-pet.svg';\nimport exercisePet from '../assets/character/exercise-pet.svg';\nimport foodPet from '../assets/character/food-pet.svg';\nimport mischiefPet from '../assets/character/mischief-pet.svg';\nimport sickPet from '../assets/character/sick-pet.svg';\nimport tricksPet from '../assets/character/tricks-pet.svg';\nimport welcomePet from '../assets/character/welcome-pet.svg';\nimport {useParams} from 'react-router-dom';\nimport {accurateInterval} from '../utils/helpers.js';\nimport Copyright from '../components/Copyright';\nimport Character from '../components/Character';\nimport LinearProgressWithLabel from '../components/LinearProgressWithLabel';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { StaticBanner } from 'material-ui-banner';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '2rem auto',\n    maxWidth: 680,\n  },\n  avatarLarge: {\n  \twidth: 72,\n    height: 72,\n  }\n  }));\n\n//Helper functions\n \n function status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response)\n  } else if (response.status === 429){\n    return Promise.resolve(response)\n  }else {\n    return Promise.reject(new Error(response.statusText))\n  }\n }\n\n function json(response) {\n  return response.json()\n }\n\n const stayInRange = (stat) => {\n  \tif (stat >= 0 && stat <= 100)\n\t    return stat;\n\t else if (stat > 100)\n\t    return 100;\n\telse\n\t    return 0;\n  }\n\nconst getCharacter = (eventType) => {\n  \n  let eventGraphic;\n\n  switch(eventType) {\n\tcase 'Natural Disaster':\n\t\teventGraphic = disasterPet;\n\t\tbreak;\n\tcase 'Food':\n\t\teventGraphic = foodPet;\n\t\tbreak;\n\tcase 'Mischief':\n\t\teventGraphic = mischiefPet;\n\t\tbreak;\n\tcase 'Disease':\n\t\teventGraphic = sickPet;\n\t\tbreak;\n\tcase 'Tricks':\n\t\teventGraphic = tricksPet;\n\t\tbreak;\n\tcase 'Exercise':\n\t\teventGraphic = exercisePet;\n\t\tbreak;\n\tdefault:\n\t\teventGraphic = welcomePet;\n\t}\n\n\treturn eventGraphic;\n}\n\n\nexport default function App() {\n\nconst [name, setName] = useState('Pippin');\nconst [dayDuration, setDayDuration] = useState(1000); //in miliseconds\nconst [age, setAge] = useState(0);\n\n\n\n// const [health, setHealth] = useState(100);\n// const [hunger, setHunger] = useState(0);\n// const [happiness, setHappiness] = useState(100);\n\nconst [sunburn, setSunburn] = useState(0);\nconst [boredom, setBoredom] = useState(0);\nconst [outdoor, setOutdoor] = useState(true);\nconst [sunscreen, setSunscreen] = useState(false);\nconst [hat, setHat] = useState(false);\nconst [uv, setUv] = useState(5);\n\nconst [gameEnd, setGameEnd] = useState(false);\nconst [dialogOpen, setDialogOpen] = useState(false);\nconst timeoutRef = useRef();\nconst eventTimeoutRef = useRef();\nconst classes = useStyles();\nconst {petName, dayDurationInSeconds} = useParams();\n\n\n\n\n\n\n const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n          petDay();\n        }, dayDuration) \n    timeoutRef.current = timeOutInfo;\n    //console.log(timeoutRef.current)\n }\n\n  const handleNextEvent = (nextEvent) => {\n  \t/*timeoutRef.current is null when starting a new game. \n  \tThis condition also keeps the app from fetching when the game has ended\n  \t*/\n  \tif (timeoutRef.current !== null) {\n\t  \tlet nextEventInfo = accurateInterval(() => {\n\t          getNextEvent();\n\t        }, nextEvent)\n\t    eventTimeoutRef.current = nextEventInfo;\n    \t//console.log(eventTimeoutRef.current);\n    }\n  }\n\n//   const getNextEvent = () => {\n  \t\n// \t\tfetch('https://www.virtual-pet.uk/v1/event')\n// \t\t\t.then(status)\n// \t\t\t.then(json)\n// \t\t\t.then(function(data) {\n// \t\t\t    if(data.type === 'Error'){\n// \t\t\t    \t console.log('Request failed', data);\n// \t\t\t    \t if (eventTimeoutRef.current) {\n// \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n// \t\t\t\t\t\t    eventTimeoutRef.current = null;\n// \t\t\t\t\t\t }\n// \t\t\t    \t handleNextEvent(data.nextEvent * dayDuration);\n// \t\t\t    } else {\n// \t\t\t    \tconsole.log('Request succeeded with JSON response', data);\n// \t\t\t\t    setHealth((prev) => stayInRange(prev + data.impact.health));\n// \t\t\t\t\tsetHunger((prev) => stayInRange(prev + data.impact.hunger));\n// \t\t\t\t\tsetHappiness((prev) => stayInRange(prev + data.impact.happiness));\n// \t\t\t\t\thandleOpenBanner(data.type.toUpperCase() + \"! \" + data.title + \": \" + data.description + \" Impact, health: \" + data.impact.health + \" hunger: \" + data.impact.hunger + \" happiness: \" + data.impact.happiness, getCharacter(data.type));\n// \t\t\t\t\tif (eventTimeoutRef.current) {\n// \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n// \t\t\t\t\t\t    eventTimeoutRef.current = null;\n// \t\t\t\t\t\t }\n// \t\t\t\t\thandleNextEvent(data.nextEvent * dayDuration); \n// \t\t\t\t}\t\t\t    \t\n\n// \t\t\t }).catch(function(error) {\n// \t\t\t    console.log('Request failed', error);\n// \t\t\t });\n\t\t  \t\n//   }\n\n const petDay = () => {\n\tsetAge((prev) => prev + 1);\n\tif (age % 5 === 0) {\n\t\tsetUv((prev) => Math.floor(Math.random() * 14) + 1);\n\t}\n\tif (outdoor) {\n\t\tif (sunscreen) {\n\t\t\tsetSunscreenDuration((prev) => {\n\t\t\t\tif (prev > 0) {\n\t\t\t\t\treturn prev - 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetSunscreen(false);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetSunburn((prev) => stayInRange(prev + (uv/2)));\n\t\t}\n\t\tsetSunburn((prev) => stayInRange(prev + uv));\n\t\tsetBoredom((prev) => stayInRange(prev - 5));\n\t}\n\telse {\n\t\tsetSunburn((prev) => stayInRange(prev - 10));\n\t\tsetBoredom((prev) => stayInRange(prev + 5));\n\n\t}\n\n\t\n\t// setHealth((prev) => stayInRange(prev - 1));\n\t// setHunger((prev) => stayInRange(prev + 1));\n\t// setHappiness((prev) => stayInRange(prev - (Math.floor(Math.random() * 5) + 1)));\n  }\n\n//   const cleanPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHealth((prev) => stayInRange(prev + 1));\n// \t}\n// }\n\n// const feedPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHunger((prev) => stayInRange(prev - 1));\n// \t}\n// }\n\n// const playPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n// \t}\n// }\n  const changeOutdoor = () => {\n\tif (!gameEnd) {\n\t\tsetOutdoor((prev) => !prev);\n\t}\n  }\n\n  const applySunscreen = () => {\n\tif (!gameEnd) {\n\t\tsetSunscreen(true);\n\t\tsetSunscreenDuration(2);\n\n\t}\n  }\n\n\n  const resetGame = () => {  \t  \t\n  \tsetAge(0);\n\tsetSunburn(0);\n\tsetBoredom(0);\n\tsetSunscreen(false);\n\tsetGameEnd(false);\n  }\n\n  //helper functions\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleOpenBanner = useCallback((text, eventTypeGraphic) => StaticBanner.show({\n  \t\ticon: <div />,\n  \t\ticonProps : {\n  \t\t\tsrc: eventTypeGraphic,\n  \t\t\tclassName:  classes.avatarLarge\n  \t\t},\n\t    open:  true,\n\t    label: text,\n   }), [classes.avatarLarge]);\n\n  const cleanup = () => {\n     //Cancel timers\n\t\tif (timeoutRef.current) {\n\t      timeoutRef.current.cancel();\n\t      \n\t    }\n\t    if (eventTimeoutRef.current) {\n\t\t  eventTimeoutRef.current.cancel();\n\t\t}\n\n\t\ttimeoutRef.current = null;\n\t\teventTimeoutRef.current = null;\n   }\n  \n  //Effects\n\n  useEffect(() => {\n   if (sunburn == 100 || boredom == 100) {   \t \n   \t setDialogOpen(true);\n\t setGameEnd(true);\n   }\n  }, [health]);\n\n  useEffect(() => {\n    if (!gameEnd) {\n      // Set pet name if provided\n      if (petName !== undefined) {\n        setName(decodeURIComponent(petName));\n      }\n\n      // Set day duration\n      if (dayDurationInSeconds !== undefined && !Number.isNaN(parseInt(dayDurationInSeconds))) {\n        let inputedDuration = parseInt(dayDurationInSeconds);\n        if (inputedDuration <= 0) {\n          setDayDuration(1000);\n        } else if (inputedDuration > 60) {\n          setDayDuration(60 * 1000);\n        } else {\n          setDayDuration(inputedDuration * 1000);\n        }\n      } else {\n        setDayDuration(1000);\n      }\n\n      // Initialize game state\n      setSunburn(0);\n      setBoredom(0);\n      setOutdoor(true);\n      setSunscreen(false);\n      setUv(5); // Starting UV index\n\n      // Start the game loop\n      beginLife();\n\n      // Schedule the first UV change\n      const uvChangeInterval = setInterval(() => {\n        setUv(Math.floor(Math.random() * 14) + 1);\n      }, 5 * dayDuration);\n\n      // Cleanup function\n      return () => {\n        cleanup();\n        clearInterval(uvChangeInterval);\n      };\n    } else {\n      cleanup();\n    }\n  }, [gameEnd, petName, dayDurationInSeconds, dayDuration]);\n\n  return (\n  \t<React.Fragment>\n  \t   <CssBaseline />\n  \t   <StaticBanner />\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t      <Paper className={classes.paper}>\n\t        <Grid container spacing={2}>\n\t          <Grid item xs={8} sm={8} md={6} container>\n\t            <Grid item xs container direction=\"column\" spacing={2}>\n\t              <Grid item xs>\n\t                <Typography variant=\"h2\">\n\t                  {name}\n\t                </Typography>\n\t                <Typography variant=\"h6\">\n\t                  Age: {age}\n\t                </Typography>\n\t\t\t\t\t<Typography variant=\"body1\">\n\t                  Today's UV Index: {uv}\n\t                </Typography>\n\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\tYou are currently {outdoor ? \"outdoors\" : \"indoors\"}\n\t\t\t\t\t</Typography>\n\t                 <Typography variant=\"body1\">\n\t                  Sunburn: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={sunburn} />\n\t                <Typography variant=\"body1\">\n\t                  Boredom:  \n\t                </Typography>\n\t                <LinearProgressWithLabel value={boredom} />\n\t                \n\t                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\">\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={changeOutdoor}>\n\t\t\t\t\t\t{outdoor ? \"Play outside\" : \"Go inside\"}\n\t\t\t\t\t  </Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={applySunscreen}>Apply Sunscreen</Button>\n\t\t\t\t\t  {/* <Button disabled={gameEnd} onClick={cleanPet}>Clean</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={feedPet}>Feed</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={playPet}>Play</Button> */}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t  \t\t<Button onClick={resetGame}>{gameEnd? \"Play again!\" : \"Reset Game\"}</Button>\n\t              </Grid>\n\t            </Grid>\n\t          </Grid>\n\t          <Grid item xs={4} sm={4} md={6}>\n\t              {/* <Character name={name} happiness={happiness} age={age} health={health} /> */}\n\t          </Grid>    \n\t        </Grid>\n\t      </Paper>\n\t\t  <Copyright />\n    \t</Grid>\n    \t{gameEnd && \n    \t\t <Dialog\n\t\t        open={dialogOpen}\n\t\t        onClose={handleDialogClose}\n\t\t        aria-labelledby=\"alert-dialog-title\"\n\t\t        aria-describedby=\"alert-dialog-description\"\n\t\t      >\n\t\t        <DialogTitle id=\"alert-dialog-title\">Game Over.</DialogTitle>\n\t\t        <DialogContent>\n\t\t          <DialogContentText id=\"alert-dialog-description\">\n\t\t           Great job! Let's play again!\n\t\t          </DialogContentText>\n\t\t        </DialogContent>\n\t\t        <DialogActions>\n\t\t          <Button onClick={handleDialogClose} color=\"primary\">\n\t\t            Close\n\t\t          </Button>\n\t\t          <Button onClick={resetGame} color=\"primary\" autoFocus>\n\t\t            Start Over!\n\t\t          </Button>\n\t\t        </DialogActions>\n      \t\t</Dialog>\n    \t}\n    </React.Fragment>\n  )\n}"]},"metadata":{},"sourceType":"module"}